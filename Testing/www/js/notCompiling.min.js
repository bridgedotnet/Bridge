"use strict";Bridge.define("ClientTestLibrary.Class391",{statics:{main:function(){for(var t,i,r,u=["TestA","TestB","TestC"],f=["TestA","TestB","TestC"],e=!1,o,s,h,c,n=Bridge.getEnumerator(u);n.moveNext();)for(o=n.getCurrent(),t=Bridge.getEnumerator(f);t.moveNext();)s=t.getCurrent(),e=Bridge.String.equals(o,s);for(i=Bridge.getEnumerator(u);i.moveNext();)for(h=i.getCurrent(),r=Bridge.getEnumerator(f);r.moveNext();)c=r.getCurrent(),e=Bridge.String.equals(h,c)}}});Bridge.define("ClientTestLibrary.Class59",{statics:{method1:function(){}},method1:function(){}});Bridge.define("ClientTestLibrary.Class59.Aux1");Bridge.define("ClientTestLibrary.Class64",{constructor:function(){},constructor$1:function(){},test:function(){var n=new ClientTestLibrary.Class64.Aux1;new ClientTestLibrary.Class64("constructor$1",n)}});Bridge.define("ClientTestLibrary.Class64.Aux1");Bridge.define("ClientTestLibrary.Class65_1");Bridge.define("ClientTestLibrary.Class65_1.Nested");Bridge.define("ClientTestLibrary.Class65_2",{inherits:[ClientTestLibrary.Class65_1.Nested]});Bridge.define("ClientTestLibrary.Class84",{test1:function(){try{}catch(n){n=Bridge.Exception.create(n)}}});Bridge.define("ClientTestLibrary.Rectangle66",{constructor$1:function(){new ClientTestLibrary.Rectangle66("constructor").$clone(this)},constructor$2:function(){},constructor:function(){},$clone:function(){return this}});Bridge.init();