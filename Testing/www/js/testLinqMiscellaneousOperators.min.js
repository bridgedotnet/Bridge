"use strict";Bridge.define("ClientTestLibrary.Linq.TestLinqMiscellaneousOperators",{statics:{test:function(n){var t,i,r,u;n.expect(4);var f=[4,1,3].concat([2,3,5]);n.deepEqual(f,[4,1,3,2,3,5],"Concat() numbers");var e=Bridge.Linq.Enumerable.from(ClientTestLibrary.Utilities.Person.getPersons()).select(function(n){return n.getName()}),o=Bridge.Linq.Enumerable.from(ClientTestLibrary.Utilities.Person.getPersons()).select(function(n){return n.getCity()}),s=e.concat(o).toArray();n.deepEqual(s,["Frank","Zeppa","John","Billy","Dora","Ian","Mary","Nemo","Edmonton","Tokyo","Lisbon","Paris","Budapest","Rome","Dortmund","Ocean"],"Concat() two sequences");t=["a","b","z"];i=["a","b","z"];n.ok(Bridge.Linq.Enumerable.from(t).sequenceEqual(i),"SequenceEqual() for equal sequences");r=["a","b","z"];u=["a","z","b"];n.ok(!Bridge.Linq.Enumerable.from(r).sequenceEqual(u),"SequenceEqual() for not equal sequences")}}});Bridge.init();