"use strict";Bridge.define("ClientTestLibrary.Class68",{x:0,y:1,test:function(){}});Bridge.define("ClientTestLibrary.ClassA",{statics:{constructor:function(){ClientTestLibrary.ClassA.staticString="Defined string";ClientTestLibrary.ClassA.staticInt=-340},statitIntNotInitialized:0,statitStringNotInitialized:null,staticInt:0,staticString:null,CONST_CHAR:81,CONST_DECIMAL:Bridge.Decimal("3.123456789324324324"),staticMethod1:function(n,t,i){return ClientTestLibrary.ClassA.statitIntNotInitialized=n,ClientTestLibrary.ClassA.statitStringNotInitialized=t,Bridge.merge(new ClientTestLibrary.ClassA("constructor"),{setDoubleA:i})},staticMethod2:function(n){var t=Bridge.cast(n[0],Bridge.Int)+1e3,i=Bridge.cast(n[1],String),r=Bridge.cast(n[2],Number);return ClientTestLibrary.ClassA.staticMethod1(t,i,r)},tryParse:function(n,t){return t.v=3,!0},getDefaultInt:function(){return Bridge.getDefaultValue(Bridge.Int)}},data:null,config:{properties:{NumberA:0,StringA:null,BoolA:!1,DoubleA:0,DecimalA:Bridge.Decimal(0)}},constructor:function(){this.setNumberA(10);this.setStringA("Str");this.setBoolA(!0);this.setDoubleA(Number.POSITIVE_INFINITY);this.setDecimalA(Bridge.Decimal.MinusOne);this.setData(Bridge.merge(new ClientTestLibrary.ClassA.Aux1,{setNumber:700}))},constructor$1:function(n){if(ClientTestLibrary.ClassA.prototype.$constructor.call(this),n===null)throw new Bridge.Exception("Related should not be null");this.setData(n)},constructor$2:function(n){if(ClientTestLibrary.ClassA.prototype.$constructor.call(this),n===null||n.length<6)throw new Bridge.Exception("Should pass six parameters");Bridge.is(n[0],Bridge.Int)&&this.setNumberA(Bridge.cast(n[0],Bridge.Int));Bridge.is(n[1],String)&&this.setStringA(Bridge.cast(n[1],String));Bridge.is(n[2],Boolean)&&this.setBoolA(Bridge.cast(n[2],Boolean));Bridge.is(n[3],Number)&&this.setDoubleA(Bridge.cast(n[3],Number));Bridge.is(n[4],Bridge.Decimal)&&this.setDecimalA(Bridge.cast(n[4],Bridge.Decimal));Bridge.is(n[5],ClientTestLibrary.ClassA.Aux1)&&this.setData(Bridge.cast(n[5],ClientTestLibrary.ClassA.Aux1))},getData:function(){return this.data},setData:function(n){this.data=n},method1:function(){var n=Bridge.merge(new ClientTestLibrary.ClassA.Aux1,{setNumber:1});return Bridge.merge(new ClientTestLibrary.ClassA.Aux1,{setNumber:2,setRelated:n})},method2:function(n){n.setRelated(n)},method3:function(){return this.getData()!==null?this.getData().toString():"no data"},method4:function(n,t){return n+t},method5:function(n){return n===void 0&&(n=-5),n},method5$1:function(n,t){return n===void 0&&(n=-50),t===void 0&&(t=-60),n+t}});Bridge.define("ClientTestLibrary.ClassA.Aux1",{config:{properties:{Number:0,Related:null}},toString:function(){return Bridge.String.format("{0} Has related {1}",this.getNumber(),this.getRelated()!==null?this.getRelated().getNumber().toString():"No")}});Bridge.define("ClientTestLibrary.TestReferenceTypes",{statics:{testInstanceConstructorsAndMethods:function(n){var t,i,r;n.expect(26);t=new ClientTestLibrary.ClassA("constructor");n.deepEqual(t.getNumberA(),10,"NumberA 10");n.deepEqual(t.getStringA(),"Str","StringA Str");n.deepEqual(t.getBoolA(),!0,"BoolA true");n.ok(t.getDoubleA()===Number.POSITIVE_INFINITY,"DoubleA Double.PositiveInfinity");n.deepEqual(t.getDecimalA(),Bridge.Decimal(-1),"DecimalA Decimal.MinusOne");n.ok(t.getData()!==null,"Data not null");n.deepEqual(t.getData().getNumber(),700,"Data.Number 700");n.throws(ClientTestLibrary.TestSet1FailureHelper.testConstructor1Failure,"Related should not be null","Related should not be null");n.throws(ClientTestLibrary.TestSet1FailureHelper.testConstructor2Failure,"Should pass six parameters","Should pass six parameters");t=new ClientTestLibrary.ClassA("constructor$2",[150,"151",!0,1.53,Bridge.Decimal(1.54),Bridge.merge(new ClientTestLibrary.ClassA.Aux1,{setNumber:155})]);n.deepEqual(t.getNumberA(),150,"NumberA 150");n.deepEqual(t.getStringA(),"151","StringA 151");n.deepEqual(t.getBoolA(),!0,"BoolA true");n.deepEqual(t.getDoubleA(),1.53,"DoubleA Double.PositiveInfinity");n.deepEqual(t.getDecimalA(),Bridge.Decimal(1.54),"DecimalA 154");n.ok(t.getData()!==null,"Data not null");n.deepEqual(t.getData().getNumber(),155,"Data.Number 155");i=t.method1();n.ok(i!==null,"b not null");n.deepEqual(i.getNumber(),2,"b Number 2");n.ok(i.getRelated()!==null,"b.Related not null");n.deepEqual(i.getRelated().getNumber(),1,"b.Related Number 1");t.setData(i);n.deepEqual(t.method3(),"2 Has related 1","Method3 2 Has related 1");t.setData(null);n.deepEqual(t.method3(),"no data","Method3 no data");r=new ClientTestLibrary.Class68;n.deepEqual(r.x,0,"c68.x 0");n.deepEqual(r.y,1,"c68.y 1");r.test();n.deepEqual(r.x,0,"c68.x 0");n.deepEqual(r.y,1,"c68.y 1")},testStaticConstructorsAndMethods:function(n){n.expect(13);n.deepEqual(ClientTestLibrary.ClassA.statitIntNotInitialized,0,"#74 StatitInt not initialized");n.deepEqual(ClientTestLibrary.ClassA.statitStringNotInitialized,null,"#74 StatitString not initialized");n.deepEqual(ClientTestLibrary.ClassA.CONST_CHAR,81,"#74 CONST_CHAR Q");n.deepEqual(!0,!0,"#74 CONST_DECIMAL 3.123456789324324324m");n.deepEqual(ClientTestLibrary.ClassA.staticInt,-340,"StatitInt initialized");n.deepEqual(ClientTestLibrary.ClassA.staticString,"Defined string","StatitString initialized");var t=ClientTestLibrary.ClassA.staticMethod1(678,"ASD",Number.NaN);n.deepEqual(ClientTestLibrary.ClassA.statitIntNotInitialized,678,"StatitIntNotInitialized 678");n.deepEqual(ClientTestLibrary.ClassA.statitStringNotInitialized,"ASD","ClassA.StatitStringNotInitialized ASD");n.deepEqual(t.getDoubleA(),Number.NaN,"DoubleA double.NaN");t=ClientTestLibrary.ClassA.staticMethod2([678,"QWE",234]);n.deepEqual(ClientTestLibrary.ClassA.statitIntNotInitialized,1678,"StatitIntNotInitialized 1678");n.deepEqual(ClientTestLibrary.ClassA.statitStringNotInitialized,"QWE","ClassA.StatitStringNotInitialized QWE");n.deepEqual(t.getDoubleA(),234,"DoubleA 234");n.throws(ClientTestLibrary.TestSet1FailureHelper.staticMethod2Failure,"Unable to cast type String to type Bridge.Int","Cast exception should occur")},testMethodParameters:function(n){var r,t,e,s,h,o,c;n.expect(16);r=new ClientTestLibrary.ClassA("constructor");t=r.method5(5);n.deepEqual(t,5,"r 5");t=r.method5(15);n.deepEqual(t,15,"r 15");t=r.method5$1(5,6);n.deepEqual(t,11,"r 11");t=r.method5$1(-50,6);n.deepEqual(t,-44,"r -44");var u=new ClientTestLibrary.ClassA("constructor"),i=u.method1(),f=i.getRelated();u.method2(i);n.ok(i!==null,"b not null");n.deepEqual(i.getNumber(),2,"b Number 2");n.ok(i.getRelated()!==null,"b.Related not null");n.deepEqual(i.getRelated().getNumber(),2,"b.Related Number 2");n.ok(f!==null,"c not null");n.deepEqual(f.getNumber(),1,"c Number 1");n.ok(f.getRelated()===null,"c.Related null");e=1;s=u.method4(e,4);n.deepEqual(e,1,"input 1");n.deepEqual(s,5,"result 5");h=ClientTestLibrary.ClassA.getDefaultInt();n.deepEqual(h,0,"di 0");o={};c=ClientTestLibrary.ClassA.tryParse("",o);n.ok(c,"tryResult");n.deepEqual(o.v,3,"i 3")}}});Bridge.define("ClientTestLibrary.TestSet1FailureHelper",{statics:{testConstructor1Failure:function(){new ClientTestLibrary.ClassA("constructor$1",Bridge.cast(null,ClientTestLibrary.ClassA.Aux1))},testConstructor2Failure:function(){var n=new ClientTestLibrary.ClassA("constructor$2",[Bridge.Array.init(2,null)])},staticMethod2Failure:function(){ClientTestLibrary.ClassA.staticMethod2(["1","some string","345.345435"])}}});Bridge.init();