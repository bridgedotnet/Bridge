"use strict";Bridge.define("ClientTestLibrary.Linq.TestLinqElementOperators",{statics:{test:function(n){var t,r,u,i,f,e,o,s;n.expect(26);t=ClientTestLibrary.Utilities.Person.getPersons();r=Bridge.Linq.Enumerable.from(ClientTestLibrary.Utilities.Person.getPersons()).where(function(n){return n.getID()===3}).first();n.deepEqual(r,ClientTestLibrary.Utilities.Person.getPersons().getItem(2),"First() with ID = 3");n.deepEqual(Bridge.Linq.Enumerable.from(t).first(function(n){return n.getID()===3}),ClientTestLibrary.Utilities.Person.getPersons().getItem(2),"First() with ID = 3 by lambda");n.deepEqual(Bridge.Linq.Enumerable.from(t).where(function(n){return n.getID()===3}).first(),ClientTestLibrary.Utilities.Person.getPersons().getItem(2),"First() with Where() with ID = 3 by lambda");n.deepEqual(Bridge.Linq.Enumerable.from(t).first(function(n){return n.getGroup()==="C"}),ClientTestLibrary.Utilities.Person.getPersons().getItem(1),"First() with Group = 'C' by lambda");n.throws(ClientTestLibrary.Linq.TestLinqElementOperators.throwExceptionOnFirst1,"First() should throw exception if no element found");n.throws(ClientTestLibrary.Linq.TestLinqElementOperators.throwExceptionOnFirst2,"First() should throw exception on empty collection");n.deepEqual(Bridge.Linq.Enumerable.from(t).firstOrDefault(function(n){return n.getID()===-1},Bridge.getDefaultValue(ClientTestLibrary.Utilities.Person)),null,"FirstOrDefault() unexisting element by lambda");n.deepEqual(Bridge.Linq.Enumerable.from(t).where(function(n){return n.getID()===-1}).firstOrDefault(null,Bridge.getDefaultValue(ClientTestLibrary.Utilities.Person)),null,"FirstOrDefault() with Where() unexisting element by lambda");n.deepEqual(Bridge.Linq.Enumerable.from(t).firstOrDefault(function(n){return n.getName()==="Nemo"},Bridge.getDefaultValue(ClientTestLibrary.Utilities.Person)),t.getItem(7),"FirstOrDefault() with Name = 'Nemo' by lambda");n.deepEqual(Bridge.Linq.Enumerable.from(t).where(function(n){return n.getName()==="Nemo"}).firstOrDefault(null,Bridge.getDefaultValue(ClientTestLibrary.Utilities.Person)),t.getItem(7),"FirstOrDefault() with Where() with Name = 'Nemo' by lambda");n.deepEqual(Bridge.Linq.Enumerable.from([]).firstOrDefault(null,Bridge.getDefaultValue(Object)),null,"FirstOrDefault() within zero-length array by lambda");u=Bridge.Linq.Enumerable.from(ClientTestLibrary.Utilities.Person.getPersons()).select(function(n){return n}).last();n.deepEqual(u,ClientTestLibrary.Utilities.Person.getPersons().getItem(7),"Last() person");n.deepEqual(Bridge.Linq.Enumerable.from(t).last(function(n){return n.getID()===4}),ClientTestLibrary.Utilities.Person.getPersons().getItem(3),"Last() with ID = 4 by lambda");n.deepEqual(Bridge.Linq.Enumerable.from(t).last(function(n){return n.getGroup()==="B"}),ClientTestLibrary.Utilities.Person.getPersons().getItem(6),"Last() with Group = 'B' by lambda");n.throws(ClientTestLibrary.Linq.TestLinqElementOperators.throwExceptionOnLast1,"Last() should throw exception if no element found");n.throws(ClientTestLibrary.Linq.TestLinqElementOperators.throwExceptionOnLast2,"Last() should throw exception on empty collection");n.deepEqual(Bridge.Linq.Enumerable.from(t).lastOrDefault(function(n){return n.getID()===-1},Bridge.getDefaultValue(ClientTestLibrary.Utilities.Person)),null,"LastOrDefault() unexisting element by lambda");n.deepEqual(Bridge.Linq.Enumerable.from(t).where(function(n){return n.getID()===-1}).lastOrDefault(null,Bridge.getDefaultValue(ClientTestLibrary.Utilities.Person)),null,"LastOrDefault() with Where() unexisting element by lambda");n.deepEqual(Bridge.Linq.Enumerable.from(t).lastOrDefault(function(n){return n.getName()==="Nemo"},Bridge.getDefaultValue(ClientTestLibrary.Utilities.Person)),t.getItem(7),"LastOrDefault() with Name = 'Nemo' by lambda");n.deepEqual(Bridge.Linq.Enumerable.from([]).lastOrDefault(null,Bridge.getDefaultValue(Object)),null,"LastOrDefault() within zero-length array by lambda");i=[5,4,1,3,9,8,6,7,2,0];f=Bridge.Linq.Enumerable.from(i).where(function(n){return n>5}).elementAt(1);n.deepEqual(f,8,"ElementAt() should return 8");n.throws(ClientTestLibrary.Linq.TestLinqElementOperators.throwExceptionOnElementAt1,"ElementAt() should throw exception if no element found");n.throws(ClientTestLibrary.Linq.TestLinqElementOperators.throwExceptionOnElementAt2,"ElementAt() should throw exception on empty collection");e=Bridge.Linq.Enumerable.from(i).elementAtOrDefault(1,Bridge.getDefaultValue(Bridge.Int));n.deepEqual(e,4,"ElementAtOrDefault() should return 4");o=Bridge.Linq.Enumerable.from(i).where(function(n){return n>5}).elementAtOrDefault(2,Bridge.getDefaultValue(Bridge.Int));n.deepEqual(o,6,"ElementAtOrDefault() should return 6");s=Bridge.Linq.Enumerable.from(i).where(function(n){return n>5}).elementAtOrDefault(100,Bridge.getDefaultValue(Bridge.Int));n.deepEqual(s,0,"ElementAtOrDefault() should return 0")},throwExceptionOnFirst1:function(){Bridge.Linq.Enumerable.from([3,4]).first(function(n){return n===5})},throwExceptionOnFirst2:function(){Bridge.Linq.Enumerable.from([]).first()},throwExceptionOnLast1:function(){Bridge.Linq.Enumerable.from([3,4]).last(function(n){return n===5})},throwExceptionOnLast2:function(){Bridge.Linq.Enumerable.from([]).last()},throwExceptionOnElementAt1:function(){Bridge.Linq.Enumerable.from([3,4]).elementAt(3)},throwExceptionOnElementAt2:function(){Bridge.Linq.Enumerable.from([]).elementAt(1)}}});Bridge.init();